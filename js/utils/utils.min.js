const $utils={debugMode:!1,cachedFetch:(e,t)=>{if($utils.debugMode)return fetch(e,t);let l=172800;"number"==typeof t?(l=t,t=void 0):"object"==typeof t&&(l=t.seconds||l);let a=$utils.cache.getLocal(e);if(null!==a){let e=new Response(new Blob([a]));return e.headers.set("Is-Cached-Fetch","true"),Promise.resolve(e)}return fetch(e,t).then(t=>{if(200===t.status){let a=t.headers.get("Content-Type");a&&(a.match(/application\/json/i)||a.match(/text\//i))?t.clone().text().then(t=>{$utils.cache.saveLocal(e,t,l)}):a&&a.match(/image/i)&&t.clone().blob().then(t=>{let a=new FileReader;a.readAsDataURL(t),a.onloadend=(()=>{let t=a.result;$utils.cache.saveLocal(e,t,l)})})}return t})},cache:{expireKey:":expire",saveLocal:(e,t,l)=>{if((l=l||7200)>0){l+=Date.now()/1e3,localStorage.setItem(e+":expire",l)}localStorage.setItem(e,t)},getLocal:e=>{let t=localStorage.getItem(e),l=localStorage.getItem(e+$utils.cache.expireKey);return null===l?t:$utils.cache.isExpire(l)?(localStorage.removeItem(e),localStorage.removeItem(e+$utils.cache.expireKey),null):t},clearExpired:()=>{let e=0;Object.keys(localStorage).forEach(t=>{t.indexOf($utils.cache.expireKey)>0&&$utils.cache.isExpire(localStorage.getItem(t))&&(e++,localStorage.removeItem(t),localStorage.removeItem(t.replace($utils.cache.expireKey,"")))}),console.log(`cleaned ${e} expired cache`)},isExpire:e=>Date.now()/1e3>e}};setTimeout(()=>{$utils.cache.clearExpired()},3e4);